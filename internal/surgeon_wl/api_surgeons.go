/*
 * Waiting List Api
 *
 * Surgeons List for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: tomas.nemec1999@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

 package surgeon_wl

import (
   "net/http"

   "github.com/gin-gonic/gin"
)

type SurgeonsAPI interface {

   // internal registration of api routes
   addRoutes(routerGroup *gin.RouterGroup)

    // CreateSurgeon - Saves new surgeon
   CreateSurgeon(ctx *gin.Context)

    // DeleteSurgeon - Deletes specific surgeon
   DeleteSurgeon(ctx *gin.Context)

    // GetAllSurgeons - Retrieves all surgeons
   GetAllSurgeons(ctx *gin.Context)

 }

// partial implementation of SurgeonsAPI - all functions must be implemented in add on files
type implSurgeonsAPI struct {

}

func newSurgeonsAPI() SurgeonsAPI {
  return &implSurgeonsAPI{}
}

func (this *implSurgeonsAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodPost, "/surgeon", this.CreateSurgeon)
  routerGroup.Handle( http.MethodDelete, "/surgeon/:surgeonId", this.DeleteSurgeon)
  routerGroup.Handle( http.MethodGet, "/surgeon", this.GetAllSurgeons)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreateSurgeon - Saves new surgeon
// func (this *implSurgeonsAPI) CreateSurgeon(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // DeleteSurgeon - Deletes specific surgeon
// func (this *implSurgeonsAPI) DeleteSurgeon(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetAllSurgeons - Retrieves all surgeons
// func (this *implSurgeonsAPI) GetAllSurgeons(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

