/*
 * Waiting List Api
 *
 * Surgeons List for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: tomas.nemec1999@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package surgeon_wl

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

type SurgeriesListAPI interface {

   // internal registration of api routes
   addRoutes(routerGroup *gin.RouterGroup)

    // CreateSurgeryEntry - Saves new entry into surgeries list
   CreateSurgeryEntry(ctx *gin.Context)

    // DeleteSurgeryEntry - Deletes specific entry
   DeleteSurgeryEntry(ctx *gin.Context)

    // GetSurgeryEntries - Provides surgeries of surgeon
   GetSurgeryEntries(ctx *gin.Context)

    // GetSurgeryEntry - Provides details about waiting list entry
   GetSurgeryEntry(ctx *gin.Context)

    // UpdateSurgeryEntry - Updates specific entry
   UpdateSurgeryEntry(ctx *gin.Context)

 }

// partial implementation of SurgeriesListAPI - all functions must be implemented in add on files
type implSurgeriesListAPI struct {

}

func newSurgeriesListAPI() SurgeriesListAPI {
  return &implSurgeriesListAPI{}
}

func (api *implSurgeriesListAPI) addRoutes(routerGroup *gin.RouterGroup) {
  routerGroup.Handle( http.MethodPost, "/surgeries-list/:surgeonId/entries", api.CreateSurgeryEntry)
  routerGroup.Handle( http.MethodDelete, "/surgeries-list/:surgeonId/entries/:entryId", api.DeleteSurgeryEntry)
  routerGroup.Handle( http.MethodGet, "/surgeries-list/:surgeonId/entries", api.GetSurgeryEntries)
  routerGroup.Handle( http.MethodGet, "/surgeries-list/:surgeonId/entries/:entryId", api.GetSurgeryEntry)
  routerGroup.Handle( http.MethodPut, "/surgeries-list/:surgeonId/entries/:entryId", api.UpdateSurgeryEntry)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreateSurgeryEntry - Saves new entry into surgeries list
// func (api *implSurgeriesListAPI) CreateSurgeryEntry(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // DeleteSurgeryEntry - Deletes specific entry
// func (api *implSurgeriesListAPI) DeleteSurgeryEntry(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetSurgeryEntries - Provides surgeries of surgeon
// func (api *implSurgeriesListAPI) GetSurgeryEntries(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetSurgeryEntry - Provides details about waiting list entry
// func (api *implSurgeriesListAPI) GetSurgeryEntry(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // UpdateSurgeryEntry - Updates specific entry
// func (api *implSurgeriesListAPI) UpdateSurgeryEntry(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//

