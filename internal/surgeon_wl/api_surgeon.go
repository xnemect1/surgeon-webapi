/*
 * Waiting List Api
 *
 * Surgeons List for Web-In-Cloud system
 *
 * API version: 1.0.0
 * Contact: tomas.nemec1999@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package surgeon_wl

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

type SurgeonsAPI interface {

  // internal registration of api routes
  addRoutes(routerGroup *gin.RouterGroup)

   // CreateSurgeon - Saves new surgeon
  CreateSurgeon(ctx *gin.Context)

   // DeleteSurgeon - Deletes specific surgeon
  DeleteSurgeon(ctx *gin.Context)

   // GetAllSurgeons - Retrieves all surgeons
  GetAllSurgeons(ctx *gin.Context)

}

// partial implementation of SurgeonsAPI - all functions must be implemented in add on files
type implSurgeonsAPI struct {

}

func newSurgeonsAPI() SurgeonsAPI {
 return &implSurgeonsAPI{}
}

func (api *implSurgeonsAPI) addRoutes(routerGroup *gin.RouterGroup) {
 routerGroup.Handle( http.MethodPost, "/surgeon", api.CreateSurgeon)
 routerGroup.Handle( http.MethodDelete, "/surgeon/:surgeonId", api.DeleteSurgeon)
 routerGroup.Handle( http.MethodGet, "/surgeon", api.GetAllSurgeons)
}

// Copy following section to separate file, uncomment, and implement accordingly
// // CreateSurgeon - Saves new surgeon
// func (api *implSurgeonsAPI) CreateSurgeon(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // DeleteSurgeon - Deletes specific surgeon
// func (api *implSurgeonsAPI) DeleteSurgeon(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
// // GetAllSurgeons - Retrieves all surgeons
// func (api *implSurgeonsAPI) GetAllSurgeons(ctx *gin.Context) {
//  	ctx.AbortWithStatus(http.StatusNotImplemented)
// }
//
